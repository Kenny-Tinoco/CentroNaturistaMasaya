<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <Style x:Key="ElementsDataGrid"
           TargetType="DataGrid" >
        <Setter Property="Margin" Value="30,10,30,0"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="CanUserResizeColumns" Value="True"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="HorizontalGridLinesBrush" Value="Black"/>
        <Setter Property="AlternatingRowBackground" Value="WhiteSmoke"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="ColumnHeaderStyle" Value="{DynamicResource ElementsDataGridColumnHeader}"/>
        <Setter Property="RowStyle" Value="{DynamicResource ElementsDataGridRowStyle}"/>
    </Style>
    
    <Style x:Key="ElementsDataGridColumnHeader" 
           TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="6"/>
        <Setter Property="Foreground" Value="{DynamicResource ColorElementsDataGridColumnHeader}"/>
        <Setter Property="Background" Value="{DynamicResource colorSecondary}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSizeElementsDataGridHeader}"/>
        <Setter Property="Height" Value="{DynamicResource HeightElementsDataGridColumnHeader}"/>
    </Style>

    <Style x:Key="ElementsDataGridRowStyle"
           TargetType="DataGridRow">
        <Setter Property="FontSize" Value="{DynamicResource FontSizeElementsDataGridRows}"/>
        <Setter Property="Foreground" Value="Black"/>
    </Style>

    <Style x:Key="CustomButtonStyle"
           TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">

                    <Border x:Name="border"
                            CornerRadius="6"
                            BorderBrush="white"
                            BorderThickness="0.6"
                            Background="{DynamicResource colorSecondary}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" 
                                          Focusable="False" 
                                          HorizontalAlignment="Center"
                                          Margin="1" 
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="True" 
                                          VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource ResourceKey=colorSecondaryDark}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="transparent"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="black"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource colorPrimaryLight}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="black"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="CustomButtonExitStyle"
           TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">

                    <Border x:Name="border"
                            BorderBrush="white"
                            BorderThickness="0.6"
                            Background="Transparent"
                            SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" 
                                          Focusable="False" 
                                          HorizontalAlignment="Center"
                                          Margin="1" 
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="True" 
                                          VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="Red"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="Black"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomButtonMinimizeStyle"
           TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">

                    <Border x:Name="border"
                            BorderBrush="white"
                            BorderThickness="0.6"
                            Background="Transparent"
                            SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" 
                                          Focusable="False" 
                                          HorizontalAlignment="Center"
                                          Margin="1" 
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="True" 
                                          VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource colorSecondary}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="Black"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="transparent"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="CustomButtonBackStyle"
           TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">

                    <Border x:Name="border"
                            BorderBrush="white"
                            BorderThickness="0.6"
                            Background="Transparent"
                            SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" 
                                          Focusable="False" 
                                          HorizontalAlignment="Center"
                                          Margin="1" 
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="True" 
                                          VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource colorSecondaryLight}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="Black"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="transparent"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="DatePickerStyle"
           TargetType="DatePicker">
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Margin" Value="5 0 0 1"/>
        <Setter Property="Width" Value="auto"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="CalendarStyle" Value="{DynamicResource DatePickerCalendarStyle}"/>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel LastChildFill="true">
                        <AdornedElementPlaceholder VerticalAlignment="Center" >
                            <Border BorderBrush="#2196F3" BorderThickness="1" />
                        </AdornedElementPlaceholder>
                        <Border Background="#2196F3" 
                                DockPanel.Dock="Right"
                                Width="18"
                                Height="18"
                                HorizontalAlignment="Right"
                                CornerRadius="10">
                            <Border.ToolTip>
                                <ToolTip>
                                    <TextBlock Text="{Binding ErrorContent}" FontSize="16" Foreground="Black"/>
                                </ToolTip>
                            </Border.ToolTip>
                            <TextBlock Text="!"
                                       VerticalAlignment="center"
                                       HorizontalAlignment="center" 
                                       FontWeight="Bold"
                                       Foreground="white"/>
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Control}" x:Key="DatePickerTextBoxStyle">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Background" Value="{x:Null}"/>
    </Style>

    <Style TargetType="{x:Type DatePickerTextBox}" >
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <TextBox x:Name="PART_TextBox"
                             Text="{Binding Path=SelectedDate, StringFormat='dddd dd/MMM/yyyy', ConverterCulture='es', RelativeSource={RelativeSource AncestorType={x:Type DatePicker}}}" Style="{StaticResource DatePickerTextBoxStyle}" >
                    </TextBox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{x:Null}" x:Key="DatePickerCalendarStyle" TargetType="{x:Type Calendar}" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Calendar}">
                    <Viewbox Height="250">
                        <CalendarItem x:Name="PART_CalendarItem"
                              Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}"/>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="TextBox" x:Key="TextBoxStyle">
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel LastChildFill="true">
                        <AdornedElementPlaceholder Name="customAdorner" VerticalAlignment="Center" >
                            <Border BorderBrush="#2196F3" BorderThickness="1" />
                        </AdornedElementPlaceholder>
                        <Border Background="#2196F3"
                                    DockPanel.Dock="Right"
                                    Width="18"
                                    Height="18"
                                    HorizontalAlignment="Right"
                                    CornerRadius="10"
                                    >
                            <Border.ToolTip>
                                <ToolTip>
                                    <TextBlock Text="{Binding ErrorContent}" FontSize="16" Foreground="Black"/>
                                </ToolTip>
                            </Border.ToolTip>
                            <TextBlock Text="!" 
                                           VerticalAlignment="center" 
                                           HorizontalAlignment="center" 
                                           FontWeight="Bold" Foreground="white"/>
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type CheckBox}" x:Key="StatusCheckBoxStyle">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        >
                        <ContentControl Content="{TemplateBinding Content}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding status}" Value="True">
                <Setter Property="Background" Value="Green"/>
                <Setter Property="Content" Value="Activo"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding status}" Value="False">
                <Setter Property="Content" Value="Inactivo"/>
                <Setter Property="Background" Value="Red"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="{x:Type RibbonCheckBox}" x:Key="StatusCheckBoxDataGridStyle">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            CornerRadius="4"
                            Padding="8 0 8 0"
                            BorderBrush="white"
                            BorderThickness="0.6"
                            SnapsToDevicePixels="true">
                        <ContentControl Content="{TemplateBinding Content}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="white"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="black"/>
                            <Setter Property="Foreground" Value="Black"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="White"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="Black"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Status}" Value="True">
                <Setter Property="Background" Value="Green"/>
                <Setter Property="Content" Value="Activo"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Status}" Value="False">
                <Setter Property="Content" Value="Inactivo"/>
                <Setter Property="Background" Value="Red"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="DeleteButtonStyle" TargetType="Button">
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">

                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            CornerRadius="4"
                            Padding="8 0 8 0"
                            BorderBrush="white"
                            BorderThickness="0.6"
                            SnapsToDevicePixels="true">
                        <ContentControl Content="{TemplateBinding Content}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="Red"/>
                            <Setter Property="Foreground" Value="Red"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="Transparent"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="Red"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>