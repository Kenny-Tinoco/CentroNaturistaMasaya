<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:customControls="clr-namespace:WPF.ViewComponents.CustomControls" 
    xmlns:converters="clr-namespace:WPF.ViewComponents.Converters">


    <Style TargetType="{x:Type customControls:HamburgerMenu}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type customControls:HamburgerMenu}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentControl Content="{TemplateBinding Content}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type customControls:HamburgerMenuItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type customControls:HamburgerMenuItem}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        >
                        <ContentControl Content="{TemplateBinding Content}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type customControls:Modal}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type customControls:Modal}">
                    <ControlTemplate.Resources>
                        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
                    </ControlTemplate.Resources>
                    <Grid Background="{TemplateBinding Background}" Visibility="{TemplateBinding IsOpen, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Border
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            UseLayoutRounding="True">
                            <Grid>
                                <Grid.OpacityMask>
                                    <VisualBrush Visual="{Binding ElementName=border}" />
                                </Grid.OpacityMask>
                                <Border
                                    x:Name="border"
                                    Background="White"
                                    CornerRadius="5" />
                                <ContentControl Content="{TemplateBinding Content}" />
                            </Grid>
                            <Border.Effect>
                                <DropShadowEffect
                                    BlurRadius="10"
                                    ShadowDepth="10"
                                    Color="Gray" />
                            </Border.Effect>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type customControls:LoadingSpinner}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type customControls:LoadingSpinner}">
                    <ControlTemplate.Resources>
                        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
                        <converters:DiameterAndThicknessToStrokeDashArrayConverter x:Key="DiameterAndThicknessToStrokeDashArrayConverter" />
                    </ControlTemplate.Resources>
                    <Ellipse
                        Width="{TemplateBinding Diameter}"
                        Height="{TemplateBinding Diameter}"
                        RenderTransformOrigin="0.5 0.5"
                        Stroke="{TemplateBinding Color}"
                        StrokeDashCap="{TemplateBinding Cap}"
                        StrokeThickness="{TemplateBinding Thickness}"
                        Visibility="{TemplateBinding IsLoading,
                                                     Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Ellipse.StrokeDashArray>
                            <MultiBinding Converter="{StaticResource DiameterAndThicknessToStrokeDashArrayConverter}">
                                <Binding Path="Diameter" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="Thickness" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding>
                        </Ellipse.StrokeDashArray>
                        <Ellipse.RenderTransform>
                            <RotateTransform x:Name="Rotation" Angle="0" />
                        </Ellipse.RenderTransform>
                        <Ellipse.Triggers>
                            <EventTrigger RoutedEvent="Loaded">
                                <BeginStoryboard>
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimation
                                            Storyboard.TargetName="Rotation"
                                            Storyboard.TargetProperty="Angle"
                                            From="0"
                                            To="360" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Ellipse.Triggers>
                    </Ellipse>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>
